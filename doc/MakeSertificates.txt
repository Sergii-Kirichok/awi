В файле C:\GoPath\src\Avigilon Control Center Web Endpoint\modules\eagle\lib\StaticConfigDefault.js
нахдится стурктура описывающая имена файлов ключей и пароль по-умолчанию
Если сгенерированные файлы положить в папку с сертификатами и пароль при генерации указать как в файле по-умолчанию - obfuscation,
то необходимо будет только добавить данные в файл hosts (windows\system32\ и т.д.)

 tls: {
    certFileName: 'public.crt',
    privateKeyFileName: 'private.key',
    customCaFileName: 'ca-crt.pem',
    passphrase: 'obfuscation',
    folderName: 'certificates',
  }

//Создаём два текстовых файлика

//Файлик newSert.conf
[dn]
C=US
ST=RandomState
L=RandomCity
O=RandomOrganization
OU=RandomOrganizationUnit
emailAddress=hello@example.com
CN=avigilon

[req]
default_bits = 2048
prompt = no
default_md = sha256
distinguished_name = dn

//Файлик v3.ext
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names

[alt_names]
DNS.1 = avigilon
DNS.2 = sergey.avigilon
DNS.3 = sanya.avigilon

Естественно добавляем записи в файл hosts
c:\windows\system32\drivers\etc\hosts

//Создаем свой центр авторизации и ключик (CA)
openssl genrsa -des3 -out rootCA.key -passout pass:obfuscation 2048
openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1825 -out ca-crt.pem -passin pass:obfuscation

//Создаем свой сертификат
openssl req -new -sha256 -nodes -out public.csr -newkey rsa:2048 -keyout private.key -config newSert.conf
openssl x509 -req -in public.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -out public.crt -days 2560 -sha256 -extfile v3.ext -passin pass:obfuscation
openssl rsa -in private.key -out private_encrypted.key -des3 -passout pass:obfuscation

Или

# 1. Генерация корневого ключа (rootCA.key)
& 'C:\Program Files\OpenSSL-Win64\bin\openssl' genrsa -des3 -out rootCA.key -passout pass:obfuscation 2048

# 2. Создание самоподписанного корневого сертификата (rootCA.crt)
& 'C:\Program Files\OpenSSL-Win64\bin\openssl' req -x509 -new -nodes -key rootCA.key -sha256 -days 1825 -out rootCA.crt -passin pass:obfuscation

# 3. Создание запроса на сертификат (CSR) и ключа (private.key)
& 'C:\Program Files\OpenSSL-Win64\bin\openssl' req -new -sha256 -nodes -out public.csr -newkey rsa:2048 -keyout private.key -config newSert.conf

# 4. Подпись запроса (CSR) для выпуска сертификата (public.crt)
& 'C:\Program Files\OpenSSL-Win64\bin\openssl' x509 -req -in public.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -out public.crt -days 2560 -sha256 -extfile v3.ext -passin pass:obfuscation

# 5. WebPoint при проверке стал проверять что-бы ключ былш зашифрован.
& 'C:\Program Files\OpenSSL-Win64\bin\openssl' rsa -in private.key -out private_encrypted.key -des3 -passout pass:obfuscation

Дальше rootCS.crt  мышкой тыц>установить сертификат>локальный компьютер>поместить все сертификаты в выбранное хранилище>обзор>доверенные корневые ценры сертификации>ok>далее>готово
Тоже самое  проделываем с public.crt

У WebPoint по умолчанию имя rootCS.crt написано как ca-crt.pem. Мы не будем заморачиваться и просто

Три файла (public.crt, private_encrypted.key->privat.key, rootCS.crt->ca-crt.pem) копируем в папку с сертификатами (c:\ProgramData\Avigilon\WebEndpoint Config\certificates\). перезапускаем сервис Avigilon weboint, ожидаем, стартует не быстро.
Можем не заниматься переименовыванием и в файле WebEndpoint.config.yaml добавить

tls:
  certFileName: public.crt        # Public certificate
  privateKeyFileName: private_encrypted.key # Private Key - encrypted by DES3
  customCaFileName: rootCA.crt    # CA Certificate
  passphrase: obfuscation
  folderName: certificates


Если хотим playground там-же в файле WebEndpoint.config.yaml добавляем строку

enablePlaygrounds: true

результирующий файл WebEndpoint.config.yaml будет имет вид. Важно, формат YAML требует вместо табуляций да пробела

publicRestInterface:
  host: "0.0.0.0"
  port: 8443

enablePlaygrounds: true

tls:
  certFileName: public.crt        # Public certificate
  privateKeyFileName: private_encrypted.key # Private Key - encrypted by DES3
  customCaFileName: rootCA.crt    # CA Certificate
  passphrase: obfuscation
  folderName: certificates


В файлике hosts 
192.168.0.11 avigilon
192.168.0.10 sergey.avigilon
192.168.0.15 sanya.avigilon

проверям https://avigilon:8443/mt/playground должно иметь доверенный сертификат.
web      https://avigilon/zones/8283cdb7daba1c1f498659f2f6ca0111c60e811890ac994dee9d7d1740883d69 - id из конфига

После этого страртуем сервис awi.


